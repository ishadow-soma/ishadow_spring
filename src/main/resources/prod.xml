<!--<?xml version="1.0" encoding="UTF-8"?>-->


<!--&lt;!&ndash; 60초마다 설정 파일의 변경을 확인 하여 변경시 갱신 &ndash;&gt;-->
<!--&lt;!&ndash;trace -> debug -> info -> warn -> error&ndash;&gt;-->
<!--<configuration scan="true" scanPeriod="60 seconds">-->

<!--    &lt;!&ndash;springProfile 태그를 사용하면 logback 설정파일에서 복수개의 프로파일을 설정할 수 있다.&ndash;&gt;-->
<!--    <springProfile name="local">-->
<!--        <property resource="application.yml"/>-->
<!--    </springProfile>-->

<!--    <springProfile name="prod">-->
<!--        <property resource="application.yml"/>-->
<!--    </springProfile>-->

<!--    &lt;!&ndash;Environment 내의 프로퍼티들을 개별적으로 설정할 수도 있다.&ndash;&gt;-->
<!--&lt;!&ndash;    <springProperty scope="context" name="LOG_LEVEL" source="logging.level.root"/>&ndash;&gt;-->

<!--    &lt;!&ndash; log file path &ndash;&gt;-->
<!--    <property name="LOG_PATH" value="${logging.file.path}"/>-->

<!--    &lt;!&ndash; log file name &ndash;&gt;-->
<!--    <property name="LOG_FILE_NAME" value="${log.file.name}"/>-->

<!--    &lt;!&ndash; err log file name &ndash;&gt;-->
<!--&lt;!&ndash;    <property name="ERR_LOG_FILE_NAME" value="err_log"/>&ndash;&gt;-->

<!--    &lt;!&ndash; pattern &ndash;&gt;-->
<!--    <property name="LOG_PATTERN" value="%-5level %d{yy-MM-dd HH:mm:ss}[%thread] [%logger{0}:%line] - %msg%n"/>-->

<!--    &lt;!&ndash; Console Appender &ndash;&gt;-->
<!--    <appender name="CONSOLE" class="ch.qos.logback.core.ConsoleAppender">-->
<!--        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">-->
<!--            <pattern>${LOG_PATTERN}</pattern>-->
<!--        </encoder>-->
<!--    </appender>-->

<!--    &lt;!&ndash; File Appender &ndash;&gt;-->
<!--    <appender name="FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">-->

<!--        &lt;!&ndash; 파일경로 설정 &ndash;&gt;-->
<!--        <file>${LOG_PATH}/error.log</file>-->
<!--        &lt;!&ndash; 출력패턴 설정&ndash;&gt;-->
<!--        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">-->
<!--            <pattern>${LOG_PATTERN}</pattern>-->
<!--        </encoder>-->

<!--        &lt;!&ndash; Rolling 정책 &ndash;&gt;-->
<!--        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">-->

<!--            &lt;!&ndash; .gz,.zip 등을 넣으면 자동 일자별 로그파일 압축 &ndash;&gt;-->
<!--            <fileNamePattern>${LOG_PATH}/${LOG_FILE_NAME}.%d{yyyy-MM-dd}_%i.log</fileNamePattern>-->

<!--            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">-->

<!--                &lt;!&ndash; 파일당 최고 용량 kb, mb, gb &ndash;&gt;-->
<!--                <maxFileSize>10MB</maxFileSize>-->

<!--            </timeBasedFileNamingAndTriggeringPolicy>-->

<!--            &lt;!&ndash; 일자별 로그파일 최대 보관주기(~일), 해당 설정일 이상된 파일은 자동으로 제거&ndash;&gt;-->
<!--            <maxHistory>30</maxHistory>-->

<!--            &lt;!&ndash;<MinIndex>1</MinIndex> <MaxIndex>10</MaxIndex>&ndash;&gt;-->
<!--        </rollingPolicy>-->
<!--    </appender>-->

<!--&lt;!&ndash;    &lt;!&ndash; 에러의 경우 파일에 로그 처리 &ndash;&gt;&ndash;&gt;-->
<!--&lt;!&ndash;    <appender name="Error" class="ch.qos.logback.core.rolling.RollingFileAppender">&ndash;&gt;-->
<!--&lt;!&ndash;        <filter class="ch.qos.logback.classic.filter.LevelFilter">&ndash;&gt;-->
<!--&lt;!&ndash;            <level>error</level>&ndash;&gt;-->
<!--&lt;!&ndash;            <onMatch>ACCEPT</onMatch>&ndash;&gt;-->
<!--&lt;!&ndash;            <onMismatch>DENY</onMismatch>&ndash;&gt;-->
<!--&lt;!&ndash;        </filter>&ndash;&gt;-->
<!--&lt;!&ndash;        <file>${LOG_PATH}/${ERR_LOG_FILE_NAME}.log</file>&ndash;&gt;-->
<!--&lt;!&ndash;        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">&ndash;&gt;-->
<!--&lt;!&ndash;            <pattern>${LOG_PATTERN}</pattern>&ndash;&gt;-->
<!--&lt;!&ndash;        </encoder>&ndash;&gt;-->
<!--&lt;!&ndash;        &lt;!&ndash; Rolling 정책 &ndash;&gt;&ndash;&gt;-->
<!--&lt;!&ndash;        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">&ndash;&gt;-->
<!--&lt;!&ndash;            &lt;!&ndash; .gz,.zip 등을 넣으면 자동 일자별 로그파일 압축 &ndash;&gt;&ndash;&gt;-->
<!--&lt;!&ndash;            <fileNamePattern>${LOG_PATH}/${ERR_LOG_FILE_NAME}.%d{yyyy-MM-dd}_%i.log</fileNamePattern>&ndash;&gt;-->
<!--&lt;!&ndash;            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">&ndash;&gt;-->
<!--&lt;!&ndash;                &lt;!&ndash; 파일당 최고 용량 kb, mb, gb &ndash;&gt;&ndash;&gt;-->
<!--&lt;!&ndash;                <maxFileSize>10MB</maxFileSize>&ndash;&gt;-->
<!--&lt;!&ndash;            </timeBasedFileNamingAndTriggeringPolicy>&ndash;&gt;-->
<!--&lt;!&ndash;            &lt;!&ndash; 일자별 로그파일 최대 보관주기(~일), 해당 설정일 이상된 파일은 자동으로 제거&ndash;&gt;&ndash;&gt;-->
<!--&lt;!&ndash;            <maxHistory>60</maxHistory>&ndash;&gt;-->
<!--&lt;!&ndash;        </rollingPolicy>&ndash;&gt;-->
<!--&lt;!&ndash;    </appender>&ndash;&gt;-->

<!--    &lt;!&ndash; root레벨 설정 &ndash;&gt;-->
<!--    <root level="${LOG_LEVEL}">-->
<!--        <appender-ref ref="CONSOLE"/>-->
<!--&lt;!&ndash;        <appender-ref ref="FILE"/>&ndash;&gt;-->
<!--&lt;!&ndash;        <appender-ref ref="Error"/>&ndash;&gt;-->
<!--    </root>-->

<!--    &lt;!&ndash; 특정패키지 로깅레벨 설정 &ndash;&gt;-->
<!--&lt;!&ndash;    <logger name="org.apache.ibatis" level="DEBUG" additivity="false">&ndash;&gt;-->
<!--&lt;!&ndash;        <appender-ref ref="CONSOLE"/>&ndash;&gt;-->
<!--&lt;!&ndash;        <appender-ref ref="FILE"/>&ndash;&gt;-->
<!--&lt;!&ndash;        <appender-ref ref="Error"/>&ndash;&gt;-->
<!--&lt;!&ndash;    </logger>&ndash;&gt;-->

<!--</configuration>-->


